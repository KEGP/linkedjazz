PREFIX schema: <http://schema.org/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

#PREFIX mo: <http://purl.org/ontology/mo/> # Music Ontology
#PREFIX mto: <http://purl.org/ontology/mto/> # Music Theory Ontology
#PREFIX chord: <http://purl.org/ontology/chord/> # Chord Ontology

PREFIX : <https://www.unibo.it/ontologies/metadata/>
PREFIX timeinterval: <http://www.ontologydesignpatterns.org/cp/owl/timeinterval.owl#>
PREFIX timeindexedsituation: <http://www.ontologydesignpatterns.org/cp/owl/timeindexedsituation.owl#>
PREFIX objectrole: <http://www.ontologydesignpatterns.org/cp/owl/objectrole.owl#>

CONSTRUCT {
  [ a :ArtistRecordingPerformance;
      :forRecording ?recording;
      :includesArtist ?artist;
      :withInstrument ?instrument;
    timeindexedsituation:atTime [
      a timeinterval:TimeInterval;
      timeinterval:hasIntervalStartDate ?artistRecordingStartDate;
      timeinterval:hasIntervalEndDate ?artistRecordingEndDate
    ];
  ].
  ?recording owl:sameAs ?musicbrainzRecordingURL.

  ?instrument schema:name ?instrumentName.
  ?instrument owl:sameAs ?MBinstrumentURL.

}WHERE {
  SERVICE<x-sparql-anything:>{
    fx:properties fx:location "file:///sparql.anything/data/musicbrainz/recording/recording_8a9dc1eb-b86c-402c-9e7a-116ee9c06eaf.json" ;
                  fx:trim-strings "true"^^xsd:boolean .

    ?root a fx:root;
          xyz:recording ?recording_BN.

    ?recording_BN xyz:id ?mbID ;
                  xyz:artist-relation-list/fx:anySlot ?artist_role_BN.

    ?artist_role_BN xyz:artist/xyz:id ?artistMbID.
    OPTIONAL {?artist_role_BN xyz:begin ?artistRecordingStartDate.}
    OPTIONAL {?artist_role_BN xyz:end ?artistRecordingEndDate.}
    ########
    OPTIONAL {
      ?artist_role_BN xyz:attributes/rdf:_1 ?instrumentInstance.
      ?instrumentInstance xyz:type-id ?instrumentMBID.
      ?instrumentInstance xyz:attribute ?instrumentName}
    ########

    BIND(fx:entity(:, "resource/Recording/", ?mbID) as ?recording).
    BIND(fx:entity(:, "resource/Artist/", ?artistMbID) as ?artist).
    #BIND(fx:entity(:, "resource/ArtistRole/", ?artistRoleMbID) as ?artistRole).
    BIND(fx:entity(:, "resource/MusicalInstrument/", ?instrumentMBID) as ?instrument).########
    BIND(fx:entity("https://musicbrainz.org/instrument/", ?instrumentMBID) as ?MBinstrumentURL).
    BIND(fx:entity("https://musicbrainz.org/recording/", ?mbID) as ?musicbrainzRecordingURL).
  }
}
