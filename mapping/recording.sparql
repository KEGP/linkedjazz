PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

PREFIX : <https://www.unibo.it/ontologies/metadata/>
PREFIX informationrealization: <http://www.ontologydesignpatterns.org/cp/owl/informationrealization.owl#>
PREFIX timeinterval: <http://www.ontologydesignpatterns.org/cp/owl/timeinterval.owl#>

CONSTRUCT {
  ?recording a :Recording;
    :hasTitle ?title;
    :rdfs:label ?title;

    informationrealization:realizes ?work;
    :hasAudioTrackLength ?trackLength;
    :creditedTo ?creditedArtist;
    :hasArtistCreditsPhrase ?artistCreditsPhrase;

    :hasTimeInterval [
      a timeinterval:TimeInterval;
      timeinterval:hasIntervalStartDate ?performanceStartDate;
      timeinterval:hasIntervalEndDate ?performanceEndDate
  ];

    # identification
    :hasMusicBrainzID ?mbID;
    :hasISRC ?isrc;
    owl:sameAs  ?url;
    owl:sameAs  ?musicbrainzRecordingURL.

}WHERE {
  SERVICE<x-sparql-anything:>{
    fx:properties fx:location "file:///sparql.anything/data/musicbrainz/recording/recording_8a9dc1eb-b86c-402c-9e7a-116ee9c06eaf.json" ;
                  fx:trim-strings "true"^^xsd:boolean .

    ?root a fx:root;
                  xyz:recording ?recording_BN.
    ?recording_BN xyz:id ?mbID.

    OPTIONAL {?recording_BN xyz:title ?title.}
    OPTIONAL {?recording_BN xyz:length ?trackLength.}
    OPTIONAL {?recording_BN xyz:artist-credit-phrase ?artistCreditPhrase.}
    OPTIONAL {?recording_BN xyz:artist-credit/fx:anySlot/xyz:artist/xyz:id ?creditedArtistMbID.}
    OPTIONAL {
      {?recording_BN xyz:isrc ?isrc.}
      UNION
      {?recording_BN xyz:isrc-list/fx:anySlot ?isrc.}
    }

    OPTIONAL {
      ?recording_BN xyz:work-relation-list/fx:anySlot ?work_BN.
      ?work_BN xyz:type "performance";
               xyz:type-id "a3005666-a872-32c3-ad06-98af558e99b0";
               xyz:target ?workMbID.
    }
    OPTIONAL {?recording_BN xyz:url-relation-list/fx:anySlot/xyz:target ?urlstr.
      BIND(fx:entity(?urlstr) as ?url)}

    OPTIONAL {FILTER(BOUND(?work_BN)). ?work_BN xyz:begin ?performanceStartDate.}
    OPTIONAL {FILTER(BOUND(?work_BN)). ?work_BN xyz:end ?performanceEndDate.}

    BIND(fx:entity(:, "resource/Work/", ?workMbID) as ?work).
    BIND(fx:entity(:, "resource/Recording/", ?mbID) as ?recording).
    BIND(fx:entity(:, "resource/Artist/", ?creditedArtistMbID) as ?creditedArtist).
    BIND(fx:entity("https://musicbrainz.org/recording/", ?mbID) as ?musicbrainzRecordingURL).

  }
}
