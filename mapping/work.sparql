PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

#PREFIX mo: <http://purl.org/ontology/mo/> # Music Ontology
#PREFIX mto: <http://purl.org/ontology/mto/> # Music Theory Ontology
#PREFIX chord: <http://purl.org/ontology/chord/> # Chord Ontology

PREFIX : <https://www.unibo.it/ontologies/metadata/>

CONSTRUCT {
  ?workMyNS a :Work;
            :hasMusicBrainzID ?mbID;
    		owl:sameAs ?mbURL;
            :hasTitle ?title;
            :hasLyricsLanguage ?language;
            :hasISWC ?iswc.
}WHERE {
  SERVICE<x-sparql-anything:>{
    fx:properties fx:location "file:///sparql.anything/data/musicbrainz/work/work_8933f057-99f8-4aa9-9f2d-3872ac54a37e.json" ;
                  fx:trim-strings "true"^^xsd:boolean .

    ?root a fx:root;
          xyz:work ?work_BN.
    ?work_BN xyz:id ?mbID.

    OPTIONAL {?work_BN xyz:title ?title.}
    OPTIONAL {?work_BN xyz:language ?language.}
    OPTIONAL {
      {?work_BN xyz:iswc ?iswc.}
      UNION
      {?work_BN xyz:iswc-list/fx:anySlot ?iswc.}
    }

    BIND(fx:entity(:, "resource/Work/", ?mbID) as ?workMyNS).
    BIND(fx:entity("https://musicbrainz.org/work/", ?mbID) as ?mbURL).
  }
}
