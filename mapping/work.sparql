PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

PREFIX : <http://localhost:8080/ontology/kejazz/>
PREFIX res: <http://localhost:8080/resource/kejazz/>
PREFIX dul: <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#>

CONSTRUCT {
  ?workMyNS a :Work;
    :hasTitle ?title;
    rdfs:label ?title;
    :hasAlias ?alias;
    :hasMusicBrainzID ?mbID;
    owl:sameAs ?mbURL;
    owl:sameAs ?url;
    :hasISWC ?iswc.

} WHERE {
  SERVICE<x-sparql-anything:>{
    # launch on musicbrainz/work
    fx:properties fx:location ?_name ;
                  fx:trim-strings "true"^^xsd:boolean .

    ?root a fx:root;
          xyz:work ?work_BN.
    ?work_BN xyz:id ?mbID.

    OPTIONAL {?work_BN xyz:title ?title.}
    OPTIONAL {?work_BN xyz:alias-list/fx:anySlot/xyz:alias ?alias.}
    OPTIONAL {
      {?work_BN xyz:iswc ?iswc.}
      UNION
      {?work_BN xyz:iswc-list/fx:anySlot ?iswc.}
    }
    OPTIONAL {
      ?work_BN xyz:url-relation-list/fx:anySlot/xyz:target ?urlstr.
      BIND(fx:entity(?urlstr) as ?url).
    }

    BIND(fx:entity(res:Work, "/", ?mbID) as ?workMyNS).

    BIND(fx:entity("https://musicbrainz.org/work/", ?mbID) as ?mbURL).
  }
}
